// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: upload_service.proto

package server

import (
	"context"

	"github.com/Auroraol/cloud-storage/upload_service/rpc/internal/logic/uploadservice"
	"github.com/Auroraol/cloud-storage/upload_service/rpc/internal/svc"
	"github.com/Auroraol/cloud-storage/upload_service/rpc/pb"
)

type UploadServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUploadServiceServer
}

func NewUploadServiceServer(svcCtx *svc.ServiceContext) *UploadServiceServer {
	return &UploadServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UploadServiceServer) GetRepositoryPoolByRepositoryId(ctx context.Context, in *pb.RepositoryReq) (*pb.RepositoryResp, error) {
	l := uploadservicelogic.NewGetRepositoryPoolByRepositoryIdLogic(ctx, s.svcCtx)
	return l.GetRepositoryPoolByRepositoryId(in)
}

func (s *UploadServiceServer) DeleteById(ctx context.Context, in *pb.DeleteByIdReq) (*pb.DeleteByIdResp, error) {
	l := uploadservicelogic.NewDeleteByIdLogic(ctx, s.svcCtx)
	return l.DeleteById(in)
}

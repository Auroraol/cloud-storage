// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: upload_service.proto

package server

import (
	"context"

	"github.com/Auroraol/cloud-storage/tree/main/cloud-storage-back-end/upload_service/rpc/internal/logic/uploadservicerpc"
	"github.com/Auroraol/cloud-storage/tree/main/cloud-storage-back-end/upload_service/rpc/internal/svc"
	"github.com/Auroraol/cloud-storage/tree/main/cloud-storage-back-end/upload_service/rpc/pb"
)

type UploadServiceRpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUploadServiceRpcServer
}

func NewUploadServiceRpcServer(svcCtx *svc.ServiceContext) *UploadServiceRpcServer {
	return &UploadServiceRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *UploadServiceRpcServer) GetRepositoryPoolByRepositoryId(ctx context.Context, in *pb.RepositoryReq) (*pb.RepositoryResp, error) {
	l := uploadservicerpclogic.NewGetRepositoryPoolByRepositoryIdLogic(ctx, s.svcCtx)
	return l.GetRepositoryPoolByRepositoryId(in)
}

func (s *UploadServiceRpcServer) DeleteById(ctx context.Context, in *pb.DeleteByIdReq) (*pb.DeleteByIdResp, error) {
	l := uploadservicerpclogic.NewDeleteByIdLogic(ctx, s.svcCtx)
	return l.DeleteById(in)
}

syntax = "v1"

info (
	title: "文件上传服务"
	desc:  "提供文件上传相关的API接口"
	author: "lfj"
	email:  "1665834268@qq.com"
)

type (
	// 普通文件上传请求
	FileUploadRequest {
		// 文件表单字段名为 "file"
		// 可选的元数据，以JSON字符串形式传递
		Metadata string `form:"metadata,optional"`
	}

	// 普通文件上传响应
	FileUploadResponse {
		URL string `json:"url"`                     // 文件访问URL
		Key string `json:"key"`                     // 文件在OSS中的键
		Size int64 `json:"size"`                    // 文件大小（字节）
		RepositoryId int64 `json:"repository_id"`   // repository表设置的主建id
	}

	// 分片上传初始化请求
	ChunkUploadInitRequest {
		FileName string `form:"file_name"`        // 文件名
		FileSize int64  `form:"file_size"`        // 文件总大小
		Metadata string `form:"metadata,optional"` // 可选的元数据
	}

	// 分片上传初始化响应
	ChunkUploadInitResponse {
		UploadId string `json:"upload_id"`      // 上传ID
		Key      string `json:"key"`           // 文件在OSS中的键
	}

	// 分片上传请求
	ChunkUploadRequest {
		UploadId   string `form:"upload_id"`    // 上传ID
		ChunkIndex int    `form:"chunk_index"`  // 分片索引
		Key        string `form:"key"`
		// 文件分片数据，表单字段名为 "file"
	}

	// 分片上传响应
	ChunkUploadResponse {
		ETag string `json:"etag"`              // 分片的ETag
	}

	// 完成分片上传请求
	ChunkUploadCompleteRequest {
		UploadId string   `json:"upload_id"`    // 上传ID
		Key      string   `json:"key"`         // 文件键
		ETags    []string `json:"etags"`       // 所有分片的ETag列表
	}

	// 完成分片上传响应
	ChunkUploadCompleteResponse {
		URL  string `json:"url"`               // 文件访问URL
		Size int64  `json:"size"`              // 文件大小（字节）
		RepositoryId int64 `json:"repository_id"`   // repository表设置的主建id
	}

	// 列出分片上传的分片信息请求
	ListPartsRequest {
		UploadId string `form:"upload_id"` // 上传ID
		Key string `form:"key"`           // 文件键
	}

	PartInfo {
		PartNumber int `json:"part_number"` // 分片编号
		Size int64 `json:"size"`           // 分片大小
		ETag string `json:"etag"`          // 分片ETag
	}

	// 列出分片上传的分片信息响应
	ListPartsResponse {
		Parts []PartInfo `json:"parts"`      // 已上传的分片信息列表
		TotalParts int `json:"total_parts"`   // 总分片数
		FileSize int64 `json:"file_size"`     // 文件总大小
	}

	// 获取文件下载链接请求
	FileDownloadUrlRequest {
		RepositoryId int64 `json:"repository_id"` // 文件ID
	}

	// 获取文件下载链接响应
	FileDownloadUrlResponse {
		URL string `json:"url"` // 文件下载URL
	}
)
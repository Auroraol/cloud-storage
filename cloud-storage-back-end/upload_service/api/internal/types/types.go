// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type ChunkUploadCompleteRequest struct {
	UploadId string   `json:"upload_id"` // 上传ID
	Key      string   `json:"key"`       // 文件键
	ETags    []string `json:"etags"`     // 所有分片的ETag列表
}

type ChunkUploadCompleteResponse struct {
	URL  string `json:"url"`  // 文件访问URL
	Size int64  `json:"size"` // 文件大小（字节）
}

type ChunkUploadInitRequest struct {
	FileName string `form:"file_name"`         // 文件名
	FileSize int64  `form:"file_size"`         // 文件总大小
	Metadata string `form:"metadata,optional"` // 可选的元数据
}

type ChunkUploadInitResponse struct {
	UploadId string `json:"upload_id"` // 上传ID
	Key      string `json:"key"`       // 文件在OSS中的键
}

type ChunkUploadRequest struct {
	UploadId   string `form:"upload_id"`   // 上传ID
	ChunkIndex int    `form:"chunk_index"` // 分片索引
	Key        string `form:"key"`
}

type ChunkUploadResponse struct {
	ETag string `json:"etag"` // 分片的ETag
}

type FileUploadRequest struct {
	Metadata string `form:"metadata,optional"`
}

type FileUploadResponse struct {
	URL          string `json:"url"`           // 文件访问URL
	Key          string `json:"key"`           // 文件在OSS中的键
	Size         int64  `json:"size"`          // 文件大小（字节）
	RepositoryId int64  `json:"repository_id"` // repository表设置的主建id
}

type History struct {
	Id           string `json:"id"`
	FileName     string `json:"file_name"`
	Size         int64  `json:"size"`
	Status       int64  `json:"status"`
	UpdateTime   string `json:"update_time"`
	RepositoryId int64  `json:"repository_id, omitempty"`
}

type HistoryDeleteAllRequest struct {
	Ids []string `json:"ids"`
}

type HistoryDeleteAllResponse struct {
}

type HistoryListRequest struct {
	Page int64 `json:"page"` //查询的第几页
	Size int64 `json:"size"` //每页页数
}

type HistoryListResponse struct {
	HistoryList []*History `json:"history_list"`
	Total       int64      `json:"total"`
}

type ListPartsRequest struct {
	UploadId string `form:"upload_id"` // 上传ID
	Key      string `form:"key"`       // 文件键
}

type ListPartsResponse struct {
	Parts      []PartInfo `json:"parts"`       // 已上传的分片信息列表
	TotalParts int        `json:"total_parts"` // 总分片数
	FileSize   int64      `json:"file_size"`   // 文件总大小
}

type PartInfo struct {
	PartNumber int    `json:"part_number"` // 分片编号
	Size       int64  `json:"size"`        // 分片大小
	ETag       string `json:"etag"`        // 分片ETag
}

type UpdateHistoryRequest struct {
	FileName     string `json:"file_name"`
	Size         int64  `json:"size"`
	Status       int64  `json:"status"`
	RepositoryId int64  `json:"repository_id, omitempty"`
}

type UpdateHistoryResponse struct {
	Id string `json:"id"` // 文件上传历史记录ID
}

// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package handler

import (
	"net/http"

	chunk "github.com/Auroraol/cloud-storage/tree/main/cloud-storage-back-end/upload_service/api/internal/handler/chunk"
	history "github.com/Auroraol/cloud-storage/tree/main/cloud-storage-back-end/upload_service/api/internal/handler/history"
	"github.com/Auroraol/cloud-storage/tree/main/cloud-storage-back-end/upload_service/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 获取文件下载链接
				Method:  http.MethodPost,
				Path:    "/file/download/url",
				Handler: FileDownloadUrlHandler(serverCtx),
			},
			{
				// 普通文件上传
				Method:  http.MethodPost,
				Path:    "/file/upload",
				Handler: FileUploadHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/upload_service/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 完成分片上传
				Method:  http.MethodPost,
				Path:    "/file/multipart/complete",
				Handler: chunk.CompleteMultipartUploadHandler(serverCtx),
			},
			{
				// 初始化分片上传
				Method:  http.MethodPost,
				Path:    "/file/multipart/init",
				Handler: chunk.InitiateMultipartUploadHandler(serverCtx),
			},
			{
				// 查询分片上传状态
				Method:  http.MethodGet,
				Path:    "/file/multipart/status",
				Handler: chunk.ListUploadedPartsHandler(serverCtx),
			},
			{
				// 上传分片
				Method:  http.MethodPost,
				Path:    "/file/multipart/upload",
				Handler: chunk.UploadPartHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/upload_service/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 删除所有历史记录
				Method:  http.MethodPost,
				Path:    "/file/history/delete/all",
				Handler: history.HistoryDeleteByIdListHandler(serverCtx),
			},
			{
				// 分页查询历史记录列表
				Method:  http.MethodPost,
				Path:    "/file/history/list",
				Handler: history.HistoryListHandler(serverCtx),
			},
			{
				// 更新历史上传记录
				Method:  http.MethodPost,
				Path:    "/file/history/update",
				Handler: history.UpdateHistoryHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/upload_service/v1"),
	)
}

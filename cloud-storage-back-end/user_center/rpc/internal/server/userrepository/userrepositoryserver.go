// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: user_center.proto

package server

import (
	"context"

	"github.com/Auroraol/cloud-storage/user_center/rpc/internal/logic/userrepository"
	"github.com/Auroraol/cloud-storage/user_center/rpc/internal/svc"
	"github.com/Auroraol/cloud-storage/user_center/rpc/pb"
)

type UserRepositoryServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserRepositoryServer
}

func NewUserRepositoryServer(svcCtx *svc.ServiceContext) *UserRepositoryServer {
	return &UserRepositoryServer{
		svcCtx: svcCtx,
	}
}

func (s *UserRepositoryServer) GetUserRepositoryNameByRepositoryId(ctx context.Context, in *pb.RepositoryIdReq) (*pb.UserRepositoryNameReply, error) {
	l := userrepositorylogic.NewGetUserRepositoryNameByRepositoryIdLogic(ctx, s.svcCtx)
	return l.GetUserRepositoryNameByRepositoryId(in)
}

func (s *UserRepositoryServer) FindRepositoryIdById(ctx context.Context, in *pb.FindRepositoryIdReq) (*pb.FindRepositoryIdReply, error) {
	l := userrepositorylogic.NewFindRepositoryIdByIdLogic(ctx, s.svcCtx)
	return l.FindRepositoryIdById(in)
}

func (s *UserRepositoryServer) CreateByShare(ctx context.Context, in *pb.CreateByShareReq) (*pb.CreateByShareReply, error) {
	l := userrepositorylogic.NewCreateByShareLogic(ctx, s.svcCtx)
	return l.CreateByShare(in)
}

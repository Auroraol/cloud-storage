// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package handler

import (
	"net/http"

	oauth "github.com/Auroraol/cloud-storage/user_center/api/internal/handler/oauth"
	recycle "github.com/Auroraol/cloud-storage/user_center/api/internal/handler/recycle"
	repository "github.com/Auroraol/cloud-storage/user_center/api/internal/handler/repository"
	user "github.com/Auroraol/cloud-storage/user_center/api/internal/handler/user"
	"github.com/Auroraol/cloud-storage/user_center/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 账号密码登录
				Method:  http.MethodPost,
				Path:    "/oauth/login",
				Handler: oauth.LoginHandler(serverCtx),
			},
			{
				// 手机号登陆/注册
				Method:  http.MethodPost,
				Path:    "/oauth/login/mobile",
				Handler: oauth.LoginByMobileCodeHandler(serverCtx),
			},
			{
				// 账号密码注册
				Method:  http.MethodPost,
				Path:    "/oauth/register",
				Handler: oauth.RegisterHandler(serverCtx),
			},
			{
				// 验证码发送
				Method:  http.MethodPost,
				Path:    "/oauth/send",
				Handler: oauth.CodeSendHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user_center/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 用户回收站文件删除
				Method:  http.MethodPost,
				Path:    "/user/recycle/delete",
				Handler: recycle.UserRecycleDeleteHandler(serverCtx),
			},
			{
				// 用户回收站列表
				Method:  http.MethodPost,
				Path:    "/user/recycle/list",
				Handler: recycle.UserRecycleListHandler(serverCtx),
			},
			{
				// 用户回收站文件恢复
				Method:  http.MethodPost,
				Path:    "/user/recycle/restore",
				Handler: recycle.UserRecycleRestoreHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/user_center/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 用户文件删除
				Method:  http.MethodPost,
				Path:    "/user/file/delete",
				Handler: repository.UserFileDeleteHandler(serverCtx),
			},
			{
				// 用户文件和文件夹列表
				Method:  http.MethodPost,
				Path:    "/user/file/folder/list",
				Handler: repository.UserFileAndFolderListHandler(serverCtx),
			},
			{
				// 用户文件列表
				Method:  http.MethodPost,
				Path:    "/user/file/list",
				Handler: repository.UserFileListHandler(serverCtx),
			},
			{
				// 用户文件移动
				Method:  http.MethodPost,
				Path:    "/user/file/move",
				Handler: repository.UserFileMoveHandler(serverCtx),
			},
			{
				// 用户文件名称修改
				Method:  http.MethodPost,
				Path:    "/user/file/name/update",
				Handler: repository.UserFileNameUpdateHandler(serverCtx),
			},
			{
				// 搜索用户文件和文件夹
				Method:  http.MethodPost,
				Path:    "/user/file/search",
				Handler: repository.UserFileSearchHandler(serverCtx),
			},
			{
				// 用户文件夹创建
				Method:  http.MethodPost,
				Path:    "/user/folder/create",
				Handler: repository.UserFolderCreateHandler(serverCtx),
			},
			{
				// 用户文件夹列表
				Method:  http.MethodPost,
				Path:    "/user/folder/list",
				Handler: repository.UserFolderListHandler(serverCtx),
			},
			{
				// 获取用户文件夹总大小
				Method:  http.MethodGet,
				Path:    "/user/folder/size",
				Handler: repository.UserFolderSizeHandler(serverCtx),
			},
			{
				// 用户文件的关联存储(文件与文件夹)
				Method:  http.MethodPost,
				Path:    "/user/repository/save",
				Handler: repository.UserRepositorySaveHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/user_center/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 刷新Authorization
				Method:  http.MethodPost,
				Path:    "/refresh/authorization",
				Handler: user.RefreshAuthorizationHandler(serverCtx),
			},
			{
				// 更换头像
				Method:  http.MethodPost,
				Path:    "/user/avatar/update",
				Handler: user.UpdateAvatarHandler(serverCtx),
			},
			{
				// 获取用户信息
				Method:  http.MethodPost,
				Path:    "/user/detail",
				Handler: user.DetailHandler(serverCtx),
			},
			{
				// 修改用户信息
				Method:  http.MethodPost,
				Path:    "/user/info/update",
				Handler: user.UpdateInfoHandler(serverCtx),
			},
			{
				// 修改密码
				Method:  http.MethodPost,
				Path:    "/user/password/update",
				Handler: user.UpdatePasswordHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/user_center/v1"),
	)
}

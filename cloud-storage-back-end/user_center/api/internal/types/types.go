// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type AccountLoginReq struct {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type AccountLoginResp struct {
	AccessToken  string `json:"accessToken"`  // access_token
	AccessExpire int64  `json:"accessExpire"` // access_token的过期时间
	RefreshAfter int64  `json:"refreshAfter"` // 刷新token之前剩余的时间
}

type AccountRegisterReq struct {
	Name     string `json:"name"`     // 用户名称
	Password string `json:"password"` // 用户密码
}

type AccountRegisterResp struct {
}

type CodeSendRequest struct {
	Email string `json:"email"`
}

type CodeSendResponse struct {
}

type LoginReq struct {
	Mobile   string `json:"mobile"`
	Password string `json:"password"`
}

type LoginResp struct {
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
	RefreshAfter int64  `json:"refreshAfter"`
}

type RefreshAuthRequest struct {
}

type RefreshAuthResponse struct {
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
	RefreshAfter int64  `json:"refreshAfter"`
}

type RegisterReq struct {
	Name     string `json:"name,optional"`     // 用户名称
	Mobile   string `json:"mobile,optional"`   // 手机号
	Password string `json:"password,optional"` // 用户密码
	Code     string `json:"code,optional"`     // 验证码
}

type RegisterResp struct {
}

type UpdateInfoReq struct {
	Avatar   string `json:"avatar,optional"`
	Nickname string `json:"nickname,optional"`
	Mobile   string `json:"mobile,optional"`
	Email    string `json:"email,optional"`
	Birthday string `json:"birthday,optional"` // 时间戳
	Gender   int64  `json:"gender,optional"`
	Brief    string `json:"brief,optional"`
}

type UpdateInfoResp struct {
}

type User struct {
	Id          int64  `json:"id"`
	Username    string `json:"username"` // 用户名
	Mobile      string `json:"mobile"`   // 手机号
	Nickname    string `json:"nickname"` // 昵称
	Gender      int64  `json:"gender"`   // 性别，1：男，0：女，默认为1
	Avatar      string `json:"avatar"`   // 用户头像
	Birthday    string `json:"birthday"` // 生日
	Email       string `json:"email"`    // 电子邮箱
	Brief       string `json:"brief"`    // 简介|个性签名
	Info        string `json:"info"`
	NowVolume   int64  `json:"now_volume"`   // 当前存储容量
	TotalVolume int64  `json:"total_volume"` // 最大存储容量
}

type UserAvatarReq struct {
}

type UserAvatarResp struct {
}

type UserFile struct {
	Id           int64  `json:"id"`
	RepositoryId int64  `json:"repository_id"`
	Name         string `json:"name"` // 文件名
	Ext          string `json:"ext"`
	Path         string `json:"path"`
	Size         int64  `json:"size"`
	UpdateTime   int64  `json:"update_time"`
}

type UserFileAndFolderListRequest struct {
	Id   int64 `json:"id"`   //查询的文件夹id
	Page int64 `json:"page"` //查询的第几页
	Size int64 `json:"size"` //每页页数
}

type UserFileAndFolderListResponse struct {
	List  []*UserFile `json:"list"`
	Count int64       `json:"count"`
}

type UserFileDeleteRequest struct {
	Id int64 `json:"id"`
}

type UserFileDeleteResponse struct {
}

type UserFileListRequest struct {
	Id int64 `json:"id"` //查询的文件夹id, 对应数据表字段parentId
}

type UserFileListResponse struct {
	List  []*UserFile `json:"list"`
	Count int64       `json:"count"`
}

type UserFileMoveRequest struct {
	Id       int64 `json:"id"`
	ParentId int64 `json:"parent_id"` // 父文件夹ID, repository_id=0
}

type UserFileMoveResponse struct {
}

type UserFileNameUpdateRequest struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

type UserFileNameUpdateResponse struct {
}

type UserFolder struct {
	Id         int64  `json:"id"`
	Name       string `json:"name"`
	UpdateTime int64  `json:"update_time"`
}

type UserFolderCreateRequest struct {
	ParentId int64  `json:"parent_id"`
	Name     string `json:"name"`
}

type UserFolderCreateResponse struct {
	Id int64 `json:"id"`
}

type UserFolderListRequest struct {
	Id int64 `json:"id"`
}

type UserFolderListResponse struct {
	List []*UserFolder `json:"list"`
}

type UserFolderSizeRequest struct {
	Id int64 `form:"id,optional"`
}

type UserFolderSizeResponse struct {
	Size int `json:"size"`
}

type UserInfoReq struct {
}

type UserInfoResp struct {
	User
	Roles []string `json:"roles"`
}

type UserPasswordReq struct {
	OldPassword string `json:"oldPassword"`
	NewPassword string `json:"newPassword"`
}

type UserPasswordResp struct {
}

type UserRecycleDeleteRequest struct {
	Id int64 `json:"id"` // 回收站文件id
}

type UserRecycleDeleteResponse struct {
	Success bool `json:"success"` // 是否成功
}

type UserRecycleFile struct {
	Id           int64  `json:"id"`
	RepositoryId int64  `json:"repository_id"`
	Name         string `json:"name"` // 文件名
	Ext          string `json:"ext"`
	Path         string `json:"path"`
	Size         int64  `json:"size"`
	UpdateTime   int64  `json:"update_time"`
}

type UserRecycleListRequest struct {
	Id   int64 `json:"id"`   //查询的文件夹id
	Page int64 `json:"page"` //查询的第几页
	Size int64 `json:"size"` //每页页数
}

type UserRecycleListResponse struct {
	List  []*UserRecycleFile `json:"list"`
	Total int64              `json:"total"` // 总数
}

type UserRecycleRestoreRequest struct {
	Id int64 `json:"id"` // 回收站文件id
}

type UserRecycleRestoreResponse struct {
	Success bool `json:"success"` // 是否成功
}

type UserRepositorySaveRequest struct {
	ParentId     int64  `json:"parent_id"`
	RepositoryId int64  `json:"repository_id"`
	Name         string `json:"name"`
}

type UserRepositorySaveResponse struct {
}

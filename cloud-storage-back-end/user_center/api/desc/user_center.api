syntax = "v1"

info (
	title:   "用户中心服务"
	desc:    "用户中心服务"
	author:  "lfj"
	email:   "1665834268@qq.com"
	version: "v1"
)

import (
	"proto/user.api"
	"proto/user_repository.api"
)

//============================> usercenter v1 <============================
//no need login
@server (
	prefix: user_center/v1
	group:  oauth
)
service user_center {
	@doc "账号密码注册"
	@handler register
	post /oauth/register (AccountRegisterReq) returns (AccountRegisterResp)

	@doc "账号密码登录"
	@handler login
	post /oauth/login (AccountLoginReq) returns (AccountLoginResp)

	@doc "手机号登陆/注册"
	@handler loginByMobileCode
	post /oauth/login/mobile (LoginReq) returns (LoginResp)

	@doc "验证码发送"
	@handler codeSend
	post /oauth/send (CodeSendRequest) returns (CodeSendResponse)
//github 登录
}

//need login
@server (
	prefix: user_center/v1
	group:  user
	jwt:    JwtAuth
)
service user_center {
	@doc "获取用户信息"
	@handler detail
	post /user/detail (UserInfoReq) returns (UserInfoResp)

	@doc "刷新Authorization"
	@handler refreshAuthorization
	post /refresh/authorization (RefreshAuthRequest) returns (RefreshAuthResponse)

	@doc "修改密码"
	@handler updatePassword
	post /user/password/update (UserPasswordReq) returns (UserPasswordResp)

	@doc "更换头像"
	@handler updateAvatar
	post /user/avatar/update (UserAvatarReq) returns (UserAvatarResp)
}

@server (
	prefix: user_center/v1
	group:  repository
	jwt:    JwtAuth
)
service user_center {
	@doc (
		summary: "用户文件的关联存储"
	)
	@handler UserRepositorySave
	post /user/repository/save (UserRepositorySaveRequest) returns (UserRepositorySaveResponse)

	@doc (
		summary: "用户文件列表"
	)
	@handler UserFileList
	post /user/file/list (UserFileListRequest) returns (UserFileListResponse)

	@doc (
		summary: "用户文件夹列表"
	)
	@handler UserFolderList
	post /user/folder/list (UserFolderListRequest) returns (UserFolderListResponse)

	@doc (
		summary: "用户文件名称修改"
	)
	@handler UserFileNameUpdate
	post /user/file/name/update (UserFileNameUpdateRequest) returns (UserFileNameUpdateResponse)

	@doc (
		summary: "用户文件夹创建"
	)
	@handler UserFolderCreate
	post /user/folder/create (UserFolderCreateRequest) returns (UserFolderCreateResponse)

	@doc (
		summary: "用户文件删除"
	)
	@handler UserFileDelete
	post /user/file/delete (UserFileDeleteRequest) returns (UserFileDeleteResponse)

	@doc (
		summary: "用户文件移动"
	)
	@handler UserFileMove
	post /user/file/move (UserFileMoveRequest) returns (UserFileMoveResponse)
}

// goctl api go --api *.api --dir ./..

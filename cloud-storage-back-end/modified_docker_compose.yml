version: "3.8"

services:
  # 基础设施服务
  mysql:
    image: mysql:8.0.27
    container_name: mysql
    restart: always
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: 741106
      MYSQL_DATABASE: cloud_storage
    ports:
      - "3306:3306"
    volumes:
      - /opt/project/mysql/data:/var/lib/mysql
      - /opt/project/mysql/conf:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password
    privileged: true
    networks:
      - cloud-network

  redis:
    image: redis:6.2.6
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      TZ: Asia/Shanghai
    command: --requirepass "741106"
    volumes:
      - /opt/project/redis/data:/data
      - /opt/project/redis/conf/redis.conf:/etc/redis/redis.conf
    privileged: true
    networks:
      - cloud-network

  # 添加Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    # 不暴露到主机，通过Nginx代理访问
    # ports:
    #  - "9090:9090"
    volumes:
      - /opt/project/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /opt/project/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - cloud-network
    
  # 添加Grafana仪表盘
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    # 不暴露到主机，通过Nginx代理访问
    # ports:
    #  - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      # 配置子路径，与Nginx代理匹配
      - GF_SERVER_ROOT_URL=http://101.37.165.220/monitoring/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - /opt/project/grafana/data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - cloud-network

  etcd:
    image: bitnami/etcd:latest
    container_name: etcd
    restart: always
    ports:
      - "2379:2379"
      - "2380:2380"
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    volumes:
      - /opt/project/etcd_data:/bitnami/etcd
    networks:
      - cloud-network

  # 应用服务
  user-center:
    build:
      context: .
      dockerfile: docker/user_center/Dockerfile
    container_name: user-center
    restart: always
    # 不暴露到主机，通过Nginx代理访问
    # ports:
    #  - "1004:1004"
    ports: 
      - "4004:4004"  # 仅暴露Prometheus监控端口
    depends_on:
      - mysql
      - redis
      - etcd
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./logs:/app/logs
    networks:
      - cloud-network

  upload-service:
    build:
      context: .
      dockerfile: docker/upload_service/Dockerfile
    container_name: upload-service
    restart: always
    # 不暴露到主机，通过Nginx代理访问
    # ports:
    #  - "1005:1005"
    ports:
      - "4005:4005"  # 仅暴露Prometheus监控端口
    depends_on:
      - mysql
      - redis
      - etcd
    environment:
      - TZ=Asia/Shanghai
      - OSS_ACCESS_KEY_ID=${OSS_ACCESS_KEY_ID}
      - OSS_ACCESS_KEY_SECRET=${OSS_ACCESS_KEY_SECRET}
      - OSS_BUCKET_NAME=${OSS_BUCKET_NAME}
      - OSS_ENDPOINT=${OSS_ENDPOINT}
    volumes:
      - ./logs:/app/logs
    networks:
      - cloud-network

  share-service:
    build:
      context: .
      dockerfile: docker/share_service/Dockerfile
    container_name: share-service
    restart: always
    # 不暴露到主机，通过Nginx代理访问
    # ports:
    #  - "1006:1006"
    ports:
      - "4006:4006"  # 仅暴露Prometheus监控端口
    depends_on:
      - mysql
      - redis
      - etcd
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./logs:/app/logs
    networks:
      - cloud-network

  log-service:
    build:
      context: .
      dockerfile: docker/log_service/Dockerfile
    container_name: log-service
    restart: always
    # 不暴露到主机，通过Nginx代理访问
    # ports:
    #  - "1007:1007"
    ports:
      - "4007:4007"  # 仅暴露Prometheus监控端口
    depends_on:
      - mysql
      - etcd
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./logs:/app/logs
    networks:
      - cloud-network

  # Nginx反向代理 - 整合现有项目和新项目
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /opt/project/nginx/html:/usr/share/nginx/html
      - /opt/project/nginx/log:/var/log/nginx
      - /opt/project/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /opt/project/ssl:/etc/nginx/cert
    depends_on:
      - user-center
      - upload-service
      - share-service
      - prometheus
      - grafana
    privileged: true
    networks:
      - cloud-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

# 网络配置
networks:
  # 内部网络，用于服务间通信
  cloud-network:
    driver: bridge 
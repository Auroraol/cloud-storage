user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # 开启gzip压缩
    gzip on;
    gzip_min_length 1k;
    gzip_comp_level 9;
    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;
    gzip_vary on;

    # 设置客户端上传文件大小限制
    client_max_body_size 100m;

    # 主服务器配置 - 整合两个项目
    server {
        listen       80;
        server_name  101.37.165.220; #公网ip

        # 静态资源 - 这里使用与您现有项目相同的配置
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # 原有项目的后端代理 - 保持不变
        location /prod-api/ {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://host.docker.internal:9090/;
        }

        # 以下是新项目的API配置 - 确保路径不与现有项目冲突
        # 用户中心服务API
        location /api/user/ {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://user-center:8000/;
        }

        # 上传服务API
        location /api/upload/ {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://upload-service:8001/;
        }

        # 分享服务API
        location /api/share/ {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://share-service:8002/;
        }

        # 日志服务API
        location /api/log/ {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://log-service:8003/;
        }

        # 监控服务 - 使用专门的子路径，避免与现有项目冲突
        # Prometheus监控
        location /monitoring/prometheus/ {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://prometheus:9090/;
            
            # 可选: 添加基本认证
            # auth_basic "Prometheus";
            # auth_basic_user_file /etc/nginx/.htpasswd;
        }

        # Grafana仪表盘
        location /monitoring/grafana/ {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://grafana:3000/;
        }

        # 错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

    # HTTPS服务器配置（可选）
    # server {
    #     listen       443 ssl;
    #     server_name  101.37.165.220;
    #
    #     ssl_certificate      /etc/nginx/cert/example.com.crt;
    #     ssl_certificate_key  /etc/nginx/cert/example.com.key;
    #
    #     ssl_session_cache    shared:SSL:1m;
    #     ssl_session_timeout  5m;
    #
    #     ssl_ciphers  HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers  on;
    #
    #     location / {
    #         root   /usr/share/nginx/html;
    #         index  index.html index.htm;
    #         try_files $uri $uri/ /index.html;
    #     }
    # }
} 
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.29.0--rc2
// source: user_center.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DecreaseVolumeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecreaseVolumeReq) Reset() {
	*x = DecreaseVolumeReq{}
	mi := &file_user_center_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecreaseVolumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecreaseVolumeReq) ProtoMessage() {}

func (x *DecreaseVolumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecreaseVolumeReq.ProtoReflect.Descriptor instead.
func (*DecreaseVolumeReq) Descriptor() ([]byte, []int) {
	return file_user_center_proto_rawDescGZIP(), []int{0}
}

func (x *DecreaseVolumeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DecreaseVolumeReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type DecreaseVolumeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecreaseVolumeResp) Reset() {
	*x = DecreaseVolumeResp{}
	mi := &file_user_center_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecreaseVolumeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecreaseVolumeResp) ProtoMessage() {}

func (x *DecreaseVolumeResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecreaseVolumeResp.ProtoReflect.Descriptor instead.
func (*DecreaseVolumeResp) Descriptor() ([]byte, []int) {
	return file_user_center_proto_rawDescGZIP(), []int{1}
}

type FindVolumeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindVolumeReq) Reset() {
	*x = FindVolumeReq{}
	mi := &file_user_center_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindVolumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindVolumeReq) ProtoMessage() {}

func (x *FindVolumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindVolumeReq.ProtoReflect.Descriptor instead.
func (*FindVolumeReq) Descriptor() ([]byte, []int) {
	return file_user_center_proto_rawDescGZIP(), []int{2}
}

func (x *FindVolumeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindVolumeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NowVolume     int64                  `protobuf:"varint,1,opt,name=nowVolume,proto3" json:"nowVolume,omitempty"`
	TotalVolume   int64                  `protobuf:"varint,2,opt,name=totalVolume,proto3" json:"totalVolume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindVolumeResp) Reset() {
	*x = FindVolumeResp{}
	mi := &file_user_center_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindVolumeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindVolumeResp) ProtoMessage() {}

func (x *FindVolumeResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindVolumeResp.ProtoReflect.Descriptor instead.
func (*FindVolumeResp) Descriptor() ([]byte, []int) {
	return file_user_center_proto_rawDescGZIP(), []int{3}
}

func (x *FindVolumeResp) GetNowVolume() int64 {
	if x != nil {
		return x.NowVolume
	}
	return 0
}

func (x *FindVolumeResp) GetTotalVolume() int64 {
	if x != nil {
		return x.TotalVolume
	}
	return 0
}

type AddVolumeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddVolumeReq) Reset() {
	*x = AddVolumeReq{}
	mi := &file_user_center_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddVolumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVolumeReq) ProtoMessage() {}

func (x *AddVolumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVolumeReq.ProtoReflect.Descriptor instead.
func (*AddVolumeReq) Descriptor() ([]byte, []int) {
	return file_user_center_proto_rawDescGZIP(), []int{4}
}

func (x *AddVolumeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddVolumeReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type AddVolumeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddVolumeResp) Reset() {
	*x = AddVolumeResp{}
	mi := &file_user_center_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddVolumeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVolumeResp) ProtoMessage() {}

func (x *AddVolumeResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVolumeResp.ProtoReflect.Descriptor instead.
func (*AddVolumeResp) Descriptor() ([]byte, []int) {
	return file_user_center_proto_rawDescGZIP(), []int{5}
}

type RepositoryIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  int64                  `protobuf:"varint,1,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepositoryIdReq) Reset() {
	*x = RepositoryIdReq{}
	mi := &file_user_center_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryIdReq) ProtoMessage() {}

func (x *RepositoryIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryIdReq.ProtoReflect.Descriptor instead.
func (*RepositoryIdReq) Descriptor() ([]byte, []int) {
	return file_user_center_proto_rawDescGZIP(), []int{6}
}

func (x *RepositoryIdReq) GetRepositoryId() int64 {
	if x != nil {
		return x.RepositoryId
	}
	return 0
}

type UserRepositoryNameReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RepositoryName string                 `protobuf:"bytes,1,opt,name=repositoryName,proto3" json:"repositoryName,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UserRepositoryNameReply) Reset() {
	*x = UserRepositoryNameReply{}
	mi := &file_user_center_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRepositoryNameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRepositoryNameReply) ProtoMessage() {}

func (x *UserRepositoryNameReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRepositoryNameReply.ProtoReflect.Descriptor instead.
func (*UserRepositoryNameReply) Descriptor() ([]byte, []int) {
	return file_user_center_proto_rawDescGZIP(), []int{7}
}

func (x *UserRepositoryNameReply) GetRepositoryName() string {
	if x != nil {
		return x.RepositoryName
	}
	return ""
}

type FindRepositoryIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindRepositoryIdReq) Reset() {
	*x = FindRepositoryIdReq{}
	mi := &file_user_center_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindRepositoryIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRepositoryIdReq) ProtoMessage() {}

func (x *FindRepositoryIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRepositoryIdReq.ProtoReflect.Descriptor instead.
func (*FindRepositoryIdReq) Descriptor() ([]byte, []int) {
	return file_user_center_proto_rawDescGZIP(), []int{8}
}

func (x *FindRepositoryIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindRepositoryIdReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  int64                  `protobuf:"varint,1,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindRepositoryIdReply) Reset() {
	*x = FindRepositoryIdReply{}
	mi := &file_user_center_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindRepositoryIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRepositoryIdReply) ProtoMessage() {}

func (x *FindRepositoryIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRepositoryIdReply.ProtoReflect.Descriptor instead.
func (*FindRepositoryIdReply) Descriptor() ([]byte, []int) {
	return file_user_center_proto_rawDescGZIP(), []int{9}
}

func (x *FindRepositoryIdReply) GetRepositoryId() int64 {
	if x != nil {
		return x.RepositoryId
	}
	return 0
}

type CreateByShareReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ParentId      int64                  `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	RepositoryId  int64                  `protobuf:"varint,3,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateByShareReq) Reset() {
	*x = CreateByShareReq{}
	mi := &file_user_center_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateByShareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateByShareReq) ProtoMessage() {}

func (x *CreateByShareReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateByShareReq.ProtoReflect.Descriptor instead.
func (*CreateByShareReq) Descriptor() ([]byte, []int) {
	return file_user_center_proto_rawDescGZIP(), []int{10}
}

func (x *CreateByShareReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateByShareReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CreateByShareReq) GetRepositoryId() int64 {
	if x != nil {
		return x.RepositoryId
	}
	return 0
}

func (x *CreateByShareReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateByShareReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateByShareReply) Reset() {
	*x = CreateByShareReply{}
	mi := &file_user_center_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateByShareReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateByShareReply) ProtoMessage() {}

func (x *CreateByShareReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_center_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateByShareReply.ProtoReflect.Descriptor instead.
func (*CreateByShareReply) Descriptor() ([]byte, []int) {
	return file_user_center_proto_rawDescGZIP(), []int{11}
}

func (x *CreateByShareReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_user_center_proto protoreflect.FileDescriptor

var file_user_center_proto_rawDesc = []byte{
	0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x37, 0x0a, 0x11, 0x44, 0x65, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x77,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x6f,
	0x77, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x0c, 0x41, 0x64, 0x64,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x0f, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x35,
	0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x3b, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x32, 0xb2, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0e, 0x64,
	0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0e,
	0x66, 0x69, 0x6e, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0xf4, 0x01, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x57, 0x0a, 0x23, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x42, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x4a, 0x0a, 0x14, 0x66, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x3d, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_center_proto_rawDescOnce sync.Once
	file_user_center_proto_rawDescData = file_user_center_proto_rawDesc
)

func file_user_center_proto_rawDescGZIP() []byte {
	file_user_center_proto_rawDescOnce.Do(func() {
		file_user_center_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_center_proto_rawDescData)
	})
	return file_user_center_proto_rawDescData
}

var file_user_center_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_user_center_proto_goTypes = []any{
	(*DecreaseVolumeReq)(nil),       // 0: pb.DecreaseVolumeReq
	(*DecreaseVolumeResp)(nil),      // 1: pb.DecreaseVolumeResp
	(*FindVolumeReq)(nil),           // 2: pb.FindVolumeReq
	(*FindVolumeResp)(nil),          // 3: pb.FindVolumeResp
	(*AddVolumeReq)(nil),            // 4: pb.AddVolumeReq
	(*AddVolumeResp)(nil),           // 5: pb.AddVolumeResp
	(*RepositoryIdReq)(nil),         // 6: pb.RepositoryIdReq
	(*UserRepositoryNameReply)(nil), // 7: pb.UserRepositoryNameReply
	(*FindRepositoryIdReq)(nil),     // 8: pb.FindRepositoryIdReq
	(*FindRepositoryIdReply)(nil),   // 9: pb.FindRepositoryIdReply
	(*CreateByShareReq)(nil),        // 10: pb.CreateByShareReq
	(*CreateByShareReply)(nil),      // 11: pb.CreateByShareReply
}
var file_user_center_proto_depIdxs = []int32{
	0,  // 0: pb.User.decreaseVolume:input_type -> pb.DecreaseVolumeReq
	2,  // 1: pb.User.findVolumeById:input_type -> pb.FindVolumeReq
	4,  // 2: pb.User.addVolume:input_type -> pb.AddVolumeReq
	6,  // 3: pb.userRepository.getUserRepositoryNameByRepositoryId:input_type -> pb.RepositoryIdReq
	8,  // 4: pb.userRepository.findRepositoryIdById:input_type -> pb.FindRepositoryIdReq
	10, // 5: pb.userRepository.createByShare:input_type -> pb.CreateByShareReq
	1,  // 6: pb.User.decreaseVolume:output_type -> pb.DecreaseVolumeResp
	3,  // 7: pb.User.findVolumeById:output_type -> pb.FindVolumeResp
	5,  // 8: pb.User.addVolume:output_type -> pb.AddVolumeResp
	7,  // 9: pb.userRepository.getUserRepositoryNameByRepositoryId:output_type -> pb.UserRepositoryNameReply
	9,  // 10: pb.userRepository.findRepositoryIdById:output_type -> pb.FindRepositoryIdReply
	11, // 11: pb.userRepository.createByShare:output_type -> pb.CreateByShareReply
	6,  // [6:12] is the sub-list for method output_type
	0,  // [0:6] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_user_center_proto_init() }
func file_user_center_proto_init() {
	if File_user_center_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_center_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_user_center_proto_goTypes,
		DependencyIndexes: file_user_center_proto_depIdxs,
		MessageInfos:      file_user_center_proto_msgTypes,
	}.Build()
	File_user_center_proto = out.File
	file_user_center_proto_rawDesc = nil
	file_user_center_proto_goTypes = nil
	file_user_center_proto_depIdxs = nil
}

// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: usercenter.proto

package usercenter

import (
	"context"

	"github.com/Auroraol/cloud-storage/user_center/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddVolumeReq       = pb.AddVolumeReq
	AddVolumeResp      = pb.AddVolumeResp
	DecreaseVolumeReq  = pb.DecreaseVolumeReq
	DecreaseVolumeResp = pb.DecreaseVolumeResp
	FindVolumeReq      = pb.FindVolumeReq
	FindVolumeResp     = pb.FindVolumeResp

	UserCenter interface {
		DecreaseVolume(ctx context.Context, in *DecreaseVolumeReq, opts ...grpc.CallOption) (*DecreaseVolumeResp, error)
		FindVolumeById(ctx context.Context, in *FindVolumeReq, opts ...grpc.CallOption) (*FindVolumeResp, error)
		AddVolume(ctx context.Context, in *AddVolumeReq, opts ...grpc.CallOption) (*AddVolumeResp, error)
	}

	defaultUserCenter struct {
		cli zrpc.Client
	}
)

func NewUserCenter(cli zrpc.Client) UserCenter {
	return &defaultUserCenter{
		cli: cli,
	}
}

func (m *defaultUserCenter) DecreaseVolume(ctx context.Context, in *DecreaseVolumeReq, opts ...grpc.CallOption) (*DecreaseVolumeResp, error) {
	client := pb.NewUserCenterClient(m.cli.Conn())
	return client.DecreaseVolume(ctx, in, opts...)
}

func (m *defaultUserCenter) FindVolumeById(ctx context.Context, in *FindVolumeReq, opts ...grpc.CallOption) (*FindVolumeResp, error) {
	client := pb.NewUserCenterClient(m.cli.Conn())
	return client.FindVolumeById(ctx, in, opts...)
}

func (m *defaultUserCenter) AddVolume(ctx context.Context, in *AddVolumeReq, opts ...grpc.CallOption) (*AddVolumeResp, error) {
	client := pb.NewUserCenterClient(m.cli.Conn())
	return client.AddVolume(ctx, in, opts...)
}
